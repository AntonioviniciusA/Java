/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Antonio
 */

import java.util.Random;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JLabel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Antonio
 */
public class DICEFIGHT extends javax.swing.JFrame {

    /**
     * Creates new form DICEFIGHT
     */
    public DICEFIGHT() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        lutadorIcon2 = new javax.swing.JLabel();
        JLabel jLabel2 = new javax.swing.JLabel();
        pontosl2Text = new javax.swing.JLabel();
        lutadorIcon1 = new javax.swing.JLabel();
        pontosl1Text = new javax.swing.JLabel();
        resultadoLuta = new javax.swing.JLabel();
        fightbtn = new javax.swing.JButton();
        Round2 = new javax.swing.JButton();
        Dice2 = new javax.swing.JLabel();
        Dice1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lutadorIcon2.setIcon(new javax.swing.ImageIcon(
                "C:\\Users\\Antonio\\Documents\\Java\\jpoo\\Images\\458324137_2080891179002971_6114794763583269053_n.png")); // NOI18N

        jLabel2.setText("VS");

        pontosl2Text.setText("Pontos");

        lutadorIcon1.setIcon(new javax.swing.ImageIcon(
                "C:\\Users\\Antonio\\Documents\\Java\\jpoo\\Images\\457748400_1351587326227020_44265548952686825_n.png")); // NOI18N

        pontosl1Text.setText("Pontos");

        fightbtn.setText("Fight");
        fightbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fightbtnActionPerformed(evt);
            }
        });

        Round2.setText("Round 2");
        Round2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Round2ActionPerformed(evt);
            }
        });

        Dice2.setText("Dado");

        Dice1.setText("Dado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(pontosl1Text)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(Dice1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Dice2)
                                .addGap(130, 130, 130))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lutadorIcon1, javax.swing.GroupLayout.PREFERRED_SIZE, 320,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(138, 138, 138)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(resultadoLuta)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel2)
                                                                .addGap(12, 12, 12))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(116, 116, 116)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(Round2)
                                                        .addComponent(fightbtn))
                                                .addGap(115, 115, 115)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(pontosl2Text)
                                                .addGap(189, 189, 189))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lutadorIcon2, javax.swing.GroupLayout.PREFERRED_SIZE, 330,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        Short.MAX_VALUE)))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(resultadoLuta)
                                .addGap(131, 131, 131)
                                .addComponent(fightbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Round2)
                                .addGap(88, 88, 88))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(pontosl2Text)
                                        .addComponent(pontosl1Text))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lutadorIcon2)
                                                .addGap(18, 18, 18)
                                                .addComponent(Dice2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lutadorIcon1)
                                                .addGap(18, 18, 18)
                                                .addComponent(Dice1)))
                                .addContainerGap(20, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>

    private void fightbtnActionPerformed(java.awt.event.ActionEvent evt) {
        lutador l[] = new lutador[6]; // vetor
        l[0] = new lutador("João gabriel", "Brasil", 19, 1.75f, 58.6f, 11, 2, 1);
        l[1] = new lutador("Joel", "Brasil", 18, 1.61f, 64.7f, 12, 2, 4);
        luta uec01 = new luta();
        uec01.lutar(l[0], l[1]);
        fightbtn.setText("Recomeçar");
        Random random = new Random();
        int l1Dado = random.nextInt(6) + 1;
        int l2Dado = random.nextInt(6) + 1;

        pontosl1Text.setText("0");
        pontosl2Text.setText("0");
        isRound1 = true;
        Round2.setText("Round 2");
        pontosl1 = 0;
        pontosl2 = 0;
        switch (l2Dado) {
            case 1:
                Dice2.setText("Tirou: 1");
                break;
            case 2:
                Dice2.setText("Tirou: 2");
                break;
            case 3:
                Dice2.setText("Tirou: 3");
                break;
            case 4:
                Dice2.setText("Tirou: 4");
                break;
            case 5:
                Dice2.setText("Tirou: 5");
                break;
            case 6:
                Dice2.setText("Tirou: 6");
                break;
            default:
                throw new AssertionError();
        }
        switch (l1Dado) {
            case 1:
                Dice1.setText("Tirou: 1");
                break;
            case 2:
                Dice1.setText("Tirou: 2");
                break;
            case 3:
                Dice1.setText("Tirou: 3");
                break;
            case 4:
                Dice1.setText("Tirou: 4");
                break;
            case 5:
                Dice1.setText("Tirou: 5");
                break;
            case 6:
                Dice1.setText("Tirou: 6");
                break;
            default:
                throw new AssertionError();
        }
        if (l1Dado > l2Dado) {
            resultadoLuta.setText("Round 1 blue win");
            pontosl1Text.setText("1");
            pontosl1 = 1;

        } else if (l1Dado < l2Dado) {
            resultadoLuta.setText("Round 1 red win");
            pontosl2Text.setText("1");
            pontosl2 = 1;
        } else {
            resultadoLuta.setText("Round 1 Draw");
        }

    }

    private void Round2ActionPerformed(java.awt.event.ActionEvent evt) {
        if (pontosl1 == 2) {
            resultadoLuta.setText("Blue win fight");
        } else if (pontosl2 == 2) {
            resultadoLuta.setText("Red win fight");
        }

        if (isRound1) {
            Round2.setText("Round 3");

            Random random = new Random();
            int l1Dado = random.nextInt(6) + 1;
            int l2Dado = random.nextInt(6) + 1;
            isRound2 = true;

            switch (l2Dado) {
                case 1:
                    Dice2.setText("Tirou: 1");
                    break;
                case 2:
                    Dice2.setText("Tirou: 2");
                    break;
                case 3:
                    Dice2.setText("Tirou: 3");
                    break;
                case 4:
                    Dice2.setText("Tirou: 4");
                    break;
                case 5:
                    Dice2.setText("Tirou: 5");
                    break;
                case 6:
                    Dice2.setText("Tirou: 6");
                    break;
                default:
                    throw new AssertionError();
            }
            switch (l1Dado) {
                case 1:
                    Dice1.setText("Tirou: 1");
                    break;
                case 2:
                    Dice1.setText("Tirou: 2");
                    break;
                case 3:
                    Dice1.setText("Tirou: 3");
                    break;
                case 4:
                    Dice1.setText("Tirou: 4");
                    break;
                case 5:
                    Dice1.setText("Tirou: 5");
                    break;
                case 6:
                    Dice1.setText("Tirou: 6");
                    break;
                default:
                    throw new AssertionError();
            }
            if (l1Dado > l2Dado) {
                resultadoLuta.setText("Round 2 blue win");
                if (pontosl1 == 1) {
                    pontosl1Text.setText("2");
                    pontosl1 = 2;
                } else if (pontosl1 == 0) {
                    pontosl1Text.setText("1");
                    pontosl1 = 1;
                }

            } else if (l1Dado < l2Dado) {
                resultadoLuta.setText("Round 2 red win");
                if (pontosl2 == 1) {
                    pontosl2Text.setText("2");
                    pontosl2 = 2;
                } else if (pontosl2 == 0) {
                    pontosl2Text.setText("1");
                    pontosl2 = 1;
                }

            } else {
                resultadoLuta.setText("Round 2 Draw");
            }
            if (pontosl1 == 2) {
                resultadoLuta.setText("Blue win fight");
            } else if (pontosl2 == 2) {
                resultadoLuta.setText("Red win fight");
            }

        } else if (isRound2) {
            if (pontosl1 < 2 && pontosl2 < 2) {
                Random random = new Random();
                int l1Dado = random.nextInt(6) + 1;
                int l2Dado = random.nextInt(6) + 1;
                isRound3 = true;
                switch (l2Dado) {
                    case 1:
                        Dice2.setText("Tirou: 1");
                        break;
                    case 2:
                        Dice2.setText("Tirou: 2");
                        break;
                    case 3:
                        Dice2.setText("Tirou: 3");
                        break;
                    case 4:
                        Dice2.setText("Tirou: 4");
                        break;
                    case 5:
                        Dice2.setText("Tirou: 5");
                        break;
                    case 6:
                        Dice2.setText("Tirou: 6");
                        break;
                    default:
                        throw new AssertionError();
                }
                switch (l1Dado) {
                    case 1:
                        Dice1.setText("Tirou: 1");
                        break;
                    case 2:
                        Dice1.setText("Tirou: 2");
                        break;
                    case 3:
                        Dice1.setText("Tirou: 3");
                        break;
                    case 4:
                        Dice1.setText("Tirou: 4");
                        break;
                    case 5:
                        Dice1.setText("Tirou: 5");
                        break;
                    case 6:
                        Dice1.setText("Tirou: 6");
                        break;
                    default:
                        throw new AssertionError();
                }
                if (l1Dado > l2Dado) {
                    resultadoLuta.setText("Round 3 blue win");
                    if (pontosl1 == 1) {
                        pontosl1Text.setText("2");
                        pontosl1 = 2;
                    } else if (pontosl1 == 0) {
                        pontosl1Text.setText("1");
                        pontosl2 = 1;
                    } else if (pontosl1 == 2) {
                        resultadoLuta.setText("Blue win fight");
                    }

                } else if (l1Dado < l2Dado) {
                    resultadoLuta.setText("Round 3 red win");
                    if (pontosl2 == 1) {
                        pontosl2Text.setText("2");
                        pontosl2 = 2;
                    } else if (pontosl2 == 0) {
                        pontosl2Text.setText("1");
                        pontosl2 = 1;
                    } else if (pontosl2 == 2) {
                        resultadoLuta.setText("Red win fight");
                    }

                } else {
                    resultadoLuta.setText("Round 3 Draw");
                }
                if (pontosl1 == 2) {
                    resultadoLuta.setText("Blue win fight");
                } else if (pontosl2 == 2) {
                    resultadoLuta.setText("Red win fight");
                }
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DICEFIGHT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DICEFIGHT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DICEFIGHT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DICEFIGHT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DICEFIGHT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton fightbtn;
    private javax.swing.JButton Round2;
    private javax.swing.JLabel Dice2;
    private javax.swing.JLabel Dice1;
    private javax.swing.JLabel lutadorIcon1;
    private javax.swing.JLabel lutadorIcon2;
    private javax.swing.JLabel pontosl1Text;
    private javax.swing.JLabel pontosl2Text;
    private javax.swing.JLabel resultadoLuta;
    private boolean isRound1, isRound2, isRound3;
    int pontosl1, pontosl2;
    luta lutaR = new luta();

    // End of variables declaration

    public class luta {

        private lutador lutador1;
        private lutador lutador2;

        public lutador getLutador1() {
            return lutador1;
        }

        public void setLutador1(lutador lutador1, String nomeLutador1) {
            this.lutador1 = lutador1;
            nomeLutador1 = getLutador1().getNome();
        }

        public lutador getLutador2() {
            return lutador2;
        }

        public void setLutador2(lutador lutador2) {
            this.lutador2 = lutador2;
        }

        public void lutar(lutador lutador1, lutador lutador2) {
            this.lutador1 = lutador1;
            this.lutador2 = lutador2;
            this.getLutador1().apresentar();
            this.getLutador2().apresentar();

        }
    }
}
